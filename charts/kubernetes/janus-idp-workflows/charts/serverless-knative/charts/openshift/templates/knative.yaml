{{- $unmanagedNamespaceExists := include "unmanaged-resource-exists" (list "v1" "Namespace" "" "openshift-serverless" .Release.Name) }}
{{- if eq $unmanagedNamespaceExists "false" }}
apiVersion: v1
kind: Namespace
metadata:
  name: openshift-serverless
{{- end }}
---
{{- $unmanagedNamespaceExists := include "unmanaged-resource-exists" (list "v1" "Namespace" "" "knative-serving" .Release.Name) }}
{{- if eq $unmanagedNamespaceExists "false" }}
apiVersion: v1
kind: Namespace
metadata:
  name: knative-serving
{{- end }}
---
{{- $unmanagedNamespaceExists := include "unmanaged-resource-exists" (list "v1" "Namespace" "" "knative-eventing" .Release.Name) }}
{{- if eq $unmanagedNamespaceExists "false" }}
apiVersion: v1
kind: Namespace
metadata:
  name: knative-eventing
{{- end }}
---
{{- $unmanagedSubscriptionExists := include "unmanaged-resource-exists" (list "operators.coreos.com/v1alpha1" "Subscription" "openshift-serverless" "serverless-operator" .Release.Name) }}
{{- if eq $unmanagedSubscriptionExists "false" }}
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: serverless-operator
  namespace: openshift-serverless
spec:
  channel: stable
  installPlanApproval: Automatic
  name: serverless-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: serverless-operator-group
  namespace: openshift-serverless
spec: {}
{{- end }}
---
{{- $unmanagedKnativeEventingExists := include "unmanaged-resource-exists" (list "operator.knative.dev/v1beta1" "KnativeEventing" "knative-eventing" "knative-eventing" .Release.Name) }}
{{- if eq $unmanagedKnativeEventingExists "false" }}
kind: KnativeEventing
apiVersion: operator.knative.dev/v1beta1
metadata:
  name: knative-eventing
  namespace: knative-eventing
spec: {}
{{- end }}
---
{{- $unmanagedKnativeServingExists := include "unmanaged-resource-exists" (list "operator.knative.dev/v1beta1" "KnativeServing" "knative-serving" "knative-serving" .Release.Name) }}
{{- if eq $unmanagedKnativeEventingExists "false" }}
apiVersion: operator.knative.dev/v1beta1
kind: KnativeServing
metadata:
  name: knative-serving
  namespace: knative-serving
spec: {}
{{- end }}
